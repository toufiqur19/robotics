#include <SPI.h>
#include <Wire.h>
#include <Adafruit_GFX.h>
#include <Adafruit_SSD1306.h>


Adafruit_SSD1306 display(128, 64, &Wire, -1);

void displaySetup(){
  display.begin(SSD1306_SWITCHCAPVCC, 0x3C);  // initialize with the I2C addr 0x3C (for the 128x32)
  display.display();  //showing the Adafruit logo
  //do not forget display.display(); otherwise the picture will not be visible
  delay(100); //waiting 10ms
  display.clearDisplay();
  //loading screen
  display.setTextColor(WHITE); 
}

void setup() {
  Serial.begin(115200);
  displaySetup();
}

int Sonar(int trigPin, int echoPin){
  pinMode(trigPin, OUTPUT);
  pinMode(echoPin, INPUT);

  long duration;
  int distance;

   // Clears the trigPin
  digitalWrite(trigPin, LOW);
  delayMicroseconds(2);
  // Sets the trigPin on HIGH state for 10 micro seconds
  digitalWrite(trigPin, HIGH);
  delayMicroseconds(10);
  digitalWrite(trigPin, LOW);
  // Reads the echoPin, returns the sound wave travel time in microseconds
  duration = pulseIn(echoPin, HIGH);
  // Calculating the distance
  distance = duration * 0.034 / 2;
  // Prints the distance on the Serial Monitor
  Serial.println(distance);

  return distance;
}

void displayText(int x, int y, int textSize, const char *displayText){
    display.setTextSize(textSize);
    display.setTextSize(2);
}


void loop() {
  int front = Sonar(15,2);
  int left = Sonar(4,5);
  int right = Sonar(12,13);
  
  display.setCursor(0, 0);
  display.setTextSize(2);

if (front > 100 && left > 100 && right > 100){
        display.print("Front: ");
        display.println(front);
        Serial.print("Front: ");
    }

else if (front > 100 && left < 100 && right < 100){
        display.print("Front: ");
        display.println(front);
        Serial.print("Front: ");
    }

else if (front < 100 && left > 100 && right < 100){
        display.print("Left: ");
         display.println(left);
         Serial.print("Left: ");
    }

else if (front < 100 && left < 100 && right > 100){
        display.print("Right: ");
        display.println(right);
        Serial.print("Right: ");
    }

else if (front > 100 && left < 100 && right > 100){

    if(front > right){
        display.print("Right/Front (Front) ");
        display.println(front);
        Serial.print("Right/Front(Front) ");
    }
     else{
        display.print("Right/Front (Right) ");
        display.println(right);
        Serial.print("Right/Front (Right) ");
     }   
    }
else if (front < 100 && left > 100 && right > 100){
    if(left > right){
        display.print("Right/Left (Left) ");
        display.println(left);
        Serial.print("Right/Left(Left) ");
    }
     else{
        display.print("Right/Front (Right) ");
        display.println(right);
        Serial.print("Right/Front (Right) ");
     } 
    }
else if (front > 100 && left > 100 && right < 100){
    if(front > left){
        display.print("Front/Left (Front) ");
        display.println(front);
        Serial.print("Front/Left(Front) ");
    }
     else{
        display.print("Front/Left (left) ");
        display.println(left);
        Serial.print("Front/Left (Left) ");
     } 
    }
else if (front < 100 && left < 100 && right < 100){
        displayText(0, 25, 1, "All Side Blocked Go Back");
        display.println("All Side Blocked Go Back ");
        Serial.print("All Side Blocked Go Back ");
    }

  display.display();
  display.clearDisplay();
  
  delay(200);
}
